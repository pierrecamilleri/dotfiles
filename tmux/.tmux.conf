set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set-option -ga terminal-overrides ",screen:Tc"
set -g status on
set -g status-bg black
set -g status-fg white

# vi-mode
set-window-option -g mode-keys vi
# Reactive escape in tmux-nvim
set -sg escape-time 10

# vim copy paste
bind-key -T copy-mode-vi 'v' send -X begin-selection
# See below for copy on server
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# copy / paste from server
# set -g set-clipboard on
# yank="~/.tmux/yank.sh"
# bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "$yank"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n Left   if-shell "$is_vim" "send-keys Left"  "select-pane -L"
bind-key -n Down   if-shell "$is_vim" "send-keys Down"  "select-pane -D"
bind-key -n Up     if-shell "$is_vim" "send-keys Up"  "select-pane -U"
bind-key -n Right  if-shell "$is_vim" "send-keys Right"  "select-pane -R"

# is_bepo="setxkbmap -print 2> /dev/null | grep bepo"
# bind-key   -n   Left    if-shell   "$is_bepo   -a   $is_vim"   "select-pane   -L"   "send-keys   C-c"
# bind-key   -n   Down    if-shell   "$is_bepo   -a   $is_vim"   "select-pane   -D"   "send-keys   C-t"
# bind-key   -n   Up      if-shell   "$is_bepo   -a   $is_vim"   "select-pane   -U"   "send-keys   C-s"
# bind-key   -n   Right   if-shell   "$is_bepo   -a   $is_vim"   "select-pane   -R"   "send-keys   C-r"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l


# New panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"



